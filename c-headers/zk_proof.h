#pragma once

/* Generated with cbindgen:0.29.0 */

/* Warning: This file is auto-generated by cbindgen. Do not modify manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>
#include <stdint.h>
#include <stdbool.h>
#include <stddef.h>

/**
 * C-compatible error codes
 */
typedef enum ZK_ZK_ErrorCode {
  /**
   * Success
   */
  ZK_ZK_ERROR_CODE_SUCCESS = 0,
  /**
   * Invalid parameter
   */
  ZK_ZK_ERROR_CODE_INVALID_PARAMETER = 1,
  /**
   * Verification failed
   */
  ZK_ZK_ERROR_CODE_VERIFICATION_FAILED = 2,
  /**
   * Unknown error
   */
  ZK_ZK_ERROR_CODE_UNKNOWN = 99,
} ZK_ZK_ErrorCode;

/**
 * Create a new proof
 *
 * # Safety
 *
 * This function is unsafe because it dereferences raw pointers.
 */
zk_proof_
int32_t zk_proof_create(const uint8_t *input,
                        uintptr_t input_len,
                        uint8_t *output,
                        uintptr_t *output_len)
;

/**
 * Verify a proof
 *
 * # Safety
 *
 * This function is unsafe because it dereferences raw pointers.
 */
zk_proof_ int32_t zk_proof_verify(const uint8_t *proof, uintptr_t proof_len) ;
